name: Publish Container

on:
  release:
    types: [published]
  push:
    paths:
      - "container/Dockerfile"

permissions:
  contents: read
  packages: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch: [amd64, arm64, armv6, armv7, riscv64]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Install jq
        if: ${{ github.event_name != 'release' }}
        run: |
          sudo apt-get update && sudo apt-get install -y jq

      - name: Compute image tag
        id: tag
        shell: bash
        run: |
          set -e
          if [[ "${GITHUB_EVENT_NAME}" == "release" ]]; then
            BASE="${{ github.event.release.tag_name }}"
          else
            BASE=$(grep '^ARG CADDY_VERSION' container/Dockerfile | cut -d ' ' -f2)
          fi
          if [[ "${GITHUB_EVENT_NAME}" != "release" ]]; then
            TAGS=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" "https://ghcr.io/v2/${{ github.repository_owner }}/caddy/tags/list" | jq -r '.tags[]')
            MAX=0
            for t in $TAGS; do
              if [[ $t =~ ^${BASE}-([0-9]+)$ ]]; then
                N=${BASH_REMATCH[1]}
                (( N > MAX )) && MAX=$N
              fi
            done
            NEXT=$((MAX+1))
            TAG="${BASE}-${NEXT}"
          else
            TAG="$BASE"
          fi
          echo "image_tag=$TAG" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        continue-on-error: true
        with:
          context: ./container
          platforms: linux/${{ matrix.arch }}
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/caddy:${{ steps.tag.outputs.image_tag }}-${{ matrix.arch }}
          build-args: |
            CADDY_VERSION=${{ github.event.release.tag_name }}
