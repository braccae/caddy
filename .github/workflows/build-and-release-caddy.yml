name: Build and release Caddy

on:
  push:
    branches: [ main ]
    tags:
      - 'v*.*.*'
  pull_request:
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  build-arm64:
    name: Build Caddy (arm64)
    runs-on: ubuntu-24.04-arm
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: arm
            goarm: 6
          - goos: linux
            goarch: arm
            goarm: 7
        goos: [linux, windows, darwin]
        goarch: [arm64, riscv64]
        exclude:
          - goos: windows
            goarch: riscv64
          - goos: darwin
            goarch: riscv64
          # - goos: linux
          #   goarch: riscv64
    steps:
      - uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'src/go.mod'
      - run: go version
      - name: Build
        working-directory: src
        run: |
          mkdir -p ../build
          OUTNAME=../build/caddy-${{ matrix.goos }}-${{ matrix.goarch }}
          if [ "${{ matrix.goarch }}" = "arm" ]; then
            OUTNAME=../build/caddy-${{ matrix.goos }}-armv${{ matrix.goarm }}
            GOARM=${{ matrix.goarm }}
          fi
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} CGO_ENABLED=0 go build -o "$OUTNAME" .
      - name: Upload artifact (arm)
        if: ${{ matrix.goarch == 'arm' }}
        uses: actions/upload-artifact@v4
        with:
          name: caddy-${{ matrix.goos }}-armv${{ matrix.goarm }}
          path: build/caddy-${{ matrix.goos }}-armv${{ matrix.goarm }}
      - name: Upload artifact (other)
        if: ${{ matrix.goarch != 'arm' }}
        uses: actions/upload-artifact@v4
        with:
          name: caddy-${{ matrix.goos }}-${{ matrix.goarch }}
          path: build/caddy-${{ matrix.goos }}-${{ matrix.goarch }}

  build-other:
    name: Build Caddy (x86_64)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows]
        goarch: [amd64]
    steps:
      - uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'src/go.mod'
      - run: go version
      - name: Build
        working-directory: src
        run: |
          mkdir -p ../build
          OUTNAME=../build/caddy-${{ matrix.goos }}-${{ matrix.goarch }}
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} CGO_ENABLED=0 go build -o "$OUTNAME" .
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: caddy-${{ matrix.goos }}-${{ matrix.goarch }}
          path: build/caddy-${{ matrix.goos }}-${{ matrix.goarch }}
  release:
    name: Release
    needs: [build-arm64, build-other]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v4

      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Generate release notes
        id: changelog
        uses: mikepenz/release-changelog-builder-action@v4
        with:
          configuration: '.github/changelog-config.json'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: ${{ steps.changelog.outputs.changelog }}
          files: ./artifacts/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
